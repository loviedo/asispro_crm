
<!-- CIERRE DEL DIV WRAPPER y DEL DIV CONTENT-->      
            <!-- jQuery CDN - Slim version (=without AJAX) -->
            <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
            <!-- Popper.JS -->
            <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js" integrity="sha384-cs/chFZiN24E4KMATLdqdvsezGxaGsi4hLGOzlXwp5UZB1LY//20VyM2taTB4QvJ" crossorigin="anonymous"></script>
            <!-- Bootstrap JS -->
            <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js" integrity="sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm" crossorigin="anonymous"></script>
            

            <!-- Datatables -->
            <script src="https://code.jquery.com/jquery-3.3.1.js"></script>
            <script type="text/javascript" src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
            
            <!-- CDN AGREGADOS PARA BOTONES-->
            <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.5.2/js/dataTables.buttons.min.js"></script>

            <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
            <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
            <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.print.min.js"></script>
            <!-- FIN CDN AGREGADOS PARA BOTONES-->

            <!-- PARAEL PROBLEMA DEL SORT DE FECHAS-->
            <script type="text/javascript" src="https://momentjs.com/downloads/moment.min.js"></script>

            <!--<script src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>-->
            <!--<script src="https://code.jquery.com/jquery-3.3.1.js"></script>-->
            <script type="text/javascript">
                $(document).ready(function () {
                    $('#sidebarCollapse').on('click', function () {
                        $('#sidebar').toggleClass('active');
                    });

                    //resolver el asunto del sort de fechas en los datatables.
                    $.fn.dataTable.moment = function (format,locale){
                        var types = $.fn.dataTable.ext.type;
                        // Add type detection
                        types.detect.unshift( function ( d ) {
                            return moment( d, format, locale, true ).isValid() ? 'moment-'+ format : null;
                        });
                        // Add sorting method - use an integer for the sorting
                        types.order[ 'moment-'+format+'-pre' ] = function ( d ) {
                            return moment( d, format, locale, true ).unix();
                        };
                    };		
                    $.fn.dataTable.moment('DD/MM/YYYY');

                    $('#tablex').DataTable({
                            "scrollY":        "1000px",//tamanho de la tabla // agrandamos para mostrar lo de planificacion
                            "scrollCollapse": true, //collapse de la tabla  
                            "language": {
                            "sProcessing":     "Procesando...",
                            "sLengthMenu":     "Mostrar _MENU_ registros",
                            "sZeroRecords":    "No se encontraron resultados",
                            "sEmptyTable":     "Ningún dato disponible en esta tabla",
                            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix":    "",
                            "sSearch":         "Buscar:",
                            "sUrl":            "",
                            "sInfoThousands":  ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst":    "Primero",
                                "sLast":     "Último",
                                "sNext":     "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        }
                    });

                    $('#tablex_mano_obra').DataTable({
                            "scrollY":        "1000px",//tamanho de la tabla // agrandamos para mostrar lo de planificacion
                            "scrollCollapse": true, //collapse de la tabla  
                            "language": {
                            "sProcessing":     "Procesando...",
                            "sLengthMenu":     "Mostrar _MENU_ registros",
                            "sZeroRecords":    "No se encontraron resultados",
                            "sEmptyTable":     "Ningún dato disponible en esta tabla",
                            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix":    "",
                            "sSearch":         "Buscar:",
                            "sUrl":            "",
                            "sInfoThousands":  ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst":    "Primero",
                                "sLast":     "Último",
                                "sNext":     "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        },
                        dom: 'l<".margin" B>frtip',
                        "bDeferRender": true,
                        "bPaginate": true,
                        //instanciamos botones
                        buttons: [
                            {extend:'copyHtml5', text: 'Copiar', titleAttr: 'Copiar',
                            exportOptions: {columns: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]}
                            }, 
                            {   extend: 'excelHtml5',
                                exportOptions: {columns: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]},
                                customize: function (xlsx) {
                                    var sheet = xlsx.xl.worksheets['hoxa1.xml'];
                                    var col = $('col', sheet);                  
                                    $('row c[r^="G"]', sheet).each(function (index, element) {
                                        if (index >= 2) {                           
                                            //change the type to `str` which is a formula
                                            $(this).attr('t', 'str');
                                            //append the concat formula
                                            $(this).append('<f>' + 'D3 + F3'/*$('is t', this).text()*/ + '</f>');
                                            //remove the inlineStr
                                            $('is', this).remove();
                                        }                       
                                    });
                                }
                            }, 
                            { extend: 'print', text: 'Imprimir'}
                        ]
                    });

                    //tabla de ingresos
                    $('#tablex_ingresos').DataTable({
                        "scrollY":        "600px",//tamanho standard de la tabla
                        "scrollCollapse": true, //collapse de la tabla  
                        "language": {
                            "sProcessing":     "Procesando...",
                            "sLengthMenu":     "Mostrar _MENU_ registros",
                            "sZeroRecords":    "No se encontraron resultados",
                            "sEmptyTable":     "Ningún dato disponible en esta tabla",
                            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix":    "",
                            "sSearch":         "Buscar:",
                            "sUrl":            "",
                            "sInfoThousands":  ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst":    "Primero",
                                "sLast":     "Último",
                                "sNext":     "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        },
                        dom: 'l<".margin" B>frtip',
                        "bDeferRender": true,
                        "bPaginate": true,
                        //instanciamos botones
                        buttons: [
                            {extend:'copyHtml5', text: 'Copiar', titleAttr: 'Copiar',
                            exportOptions: {columns: [0,1,2,3,4,5,6,7,8,9,10,11,12,13]}
                            }, 
                            {extend: 'excelHtml5',
                            exportOptions: {columns: [0,1,2,3,4,5,6,7,8,9,10,11,12,13]}
                            }, 
                            { extend: 'print', text: 'Imprimir'}
                        ]
                    });

                    //tabla de liquidaciones
                    $('#tablex_liquidaciones').DataTable({
                        "scrollY":        "600px",//tamanho standard de la tabla
                        "scrollCollapse": true, //collapse de la tabla  
                        "language": {
                            "sProcessing":     "Procesando...",
                            "sLengthMenu":     "Mostrar _MENU_ registros",
                            "sZeroRecords":    "No se encontraron resultados",
                            "sEmptyTable":     "Ningún dato disponible en esta tabla",
                            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix":    "",
                            "sSearch":         "Buscar:",
                            "sUrl":            "",
                            "sInfoThousands":  ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst":    "Primero",
                                "sLast":     "Último",
                                "sNext":     "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        },
                        "footerCallback": function ( row, data, start, end, display ) {
                            var api = this.api(), data;
                
                            // Remove the formatting to get integer data for summation
                            var intVal = function ( i ) {
                                return typeof i === 'string' ?
                                    i.replace(/[\$,]/g, '')*1 :
                                    typeof i === 'number' ?
                                        i : 0;
                            };
                
                            // Total over all pages
                            total1 = api.column(6,{search: 'applied'}).data().reduce(function (a,b) {return intVal(a) + intVal(b);}, 0);
                            total2 = api.column(7,{search: 'applied'}).data().reduce(function (a,b) {return intVal(a) + intVal(b);}, 0);
                            total3 = api.column(8,{search: 'applied'}).data().reduce(function (a,b) {return intVal(a) + intVal(b);}, 0);
                            total4 = api.column(9,{search: 'applied'}).data().reduce(function (a,b) {return intVal(a) + intVal(b);}, 0);
                            total5 = api.column(10,{search: 'applied'}).data().reduce(function (a,b) {return intVal(a) + intVal(b);}, 0);
                            total6 = api.column(11,{search: 'applied'}).data().reduce(function (a,b) {return intVal(a) + intVal(b);}, 0);
                            total7 = api.column(12,{search: 'applied'}).data().reduce(function (a,b) {return intVal(a) + intVal(b);}, 0);
                            total8 = api.column(13,{search: 'applied'}).data().reduce(function (a,b) {return intVal(a) + intVal(b);}, 0);
                            total9 = api.column(14,{search: 'applied'}).data().reduce(function (a,b) {return intVal(a) + intVal(b);}, 0);
                            total10 = api.column(15,{search: 'applied'}).data().reduce(function (a,b) {return intVal(a) + intVal(b);}, 0);
                            total11 = api.column(16,{search: 'applied'}).data().reduce(function (a,b) {return intVal(a) + intVal(b);}, 0);
                            total12 = api.column(17,{search: 'applied'}).data().reduce(function (a,b) {return intVal(a) + intVal(b);}, 0);
                
                            // Update footer
                            $(api.column(6).footer()).html('Gs. '+ total1);
                            $(api.column(7).footer()).html('Gs. '+ total2);
                            $(api.column(8).footer()).html('Gs. '+ total3);
                            $(api.column(9).footer()).html('Gs. '+ total4);
                            $(api.column(10).footer()).html('Gs. '+ total5);
                            $(api.column(11).footer()).html('Gs. '+ total6);
                            $(api.column(12).footer()).html('Gs. '+ total7);
                            $(api.column(13).footer()).html('Gs. '+ total8);
                            $(api.column(14).footer()).html('Gs. '+ total9);
                            $(api.column(15).footer()).html('Gs. '+ total10);
                            $(api.column(16).footer()).html('Gs. '+ total11);
                            $(api.column(17).footer()).html('Gs. '+ total12);

                        },
                        dom: 'l<".margin" B>frtip',
                        "bDeferRender": true,
                        "bPaginate": true,
                        //instanciamos botones
                        buttons: [
                            {extend:'copyHtml5', text: 'Copiar', titleAttr: 'Copiar',
                            exportOptions: {columns: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]}
                            }, 
                            //exportamos el footer con las totales. para eso el true
                            //hay problemas con esto, ver link https://datatables.net/forums/discussion/41778
                            //https://datatables.net/forums/discussion/42097/can-you-export-a-table-and-format-a-cell-to-use-a-formula-using-orthogonal-data
                            {extend: 'excelHtml5', footer: true,
                            exportOptions: {columns: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17], orthogonal: 'export'},

                            }, 
                            { extend: 'print', text: 'Imprimir'}
                        ]
                    });
                  
//ejemplo footer callback https://stackoverflow.com/questions/39663612/datatables-dynamic-totals-in-footer-on-rows-change
//https://jsfiddle.net/sLxbznx6/1/


                    //tabla de gastos con botones
                    $('#tablex_gastos_rol2').DataTable({
                        "scrollY":        "600px",//tamanho standard de la tabla
                        "scrollCollapse": true, //collapse de la tabla  
                        "language": {
                            "sProcessing":     "Procesando...",
                            "sLengthMenu":     "Mostrar _MENU_ registros",
                            "sZeroRecords":    "No se encontraron resultados",
                            "sEmptyTable":     "Ningún dato disponible en esta tabla",
                            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix":    "",
                            "sSearch":         "Buscar:",
                            "sUrl":            "",
                            "sInfoThousands":  ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst":    "Primero",
                                "sLast":     "Último",
                                "sNext":     "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        },
                        dom: 'l<".margin" B>frtip',
                        "bDeferRender": true,
                        "bPaginate": true,
                        //instanciamos botones
                        buttons: [
                            {extend:'copyHtml5', text: 'Copiar', titleAttr: 'Copiar',
                            exportOptions: {columns: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]}
                            }, 
                            {extend: 'excelHtml5',
                            exportOptions: {columns: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]}
                            }, 
                            { extend: 'print', text: 'Imprimir'}
                        ]
                        //buttons: ['pageLength', 'copy', 'excel', 'print']
                        //buttons: ['copy', 'excel', 'pdf', 'print']//debug
                    });

                    $('#tablex_gastos_rol1').DataTable({
                        "scrollY":        "600px",//tamanho standard de la tabla
                        "scrollCollapse": true, //collapse de la tabla  
                        "language": {
                            "sProcessing":     "Procesando...",
                            "sLengthMenu":     "Mostrar _MENU_ registros",
                            "sZeroRecords":    "No se encontraron resultados",
                            "sEmptyTable":     "Ningún dato disponible en esta tabla",
                            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix":    "",
                            "sSearch":         "Buscar:",
                            "sUrl":            "",
                            "sInfoThousands":  ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst":    "Primero",
                                "sLast":     "Último",
                                "sNext":     "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        },
                        dom: 'l<".margin" B>frtip',
                        "bDeferRender": true,
                        "bPaginate": true,
                        //instanciamos botones
                        buttons: [
                            {extend:'copyHtml5', text: 'Copiar', titleAttr: 'Copiar',
                            exportOptions: {columns: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]}
                            }, 
                            {extend: 'excelHtml5',
                            exportOptions: {columns: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]}
                            }, 
                            { extend: 'print', text: 'Imprimir'}
                        ]
                        
                        //buttons: ['pageLength', 'copy', 'excel', 'print']
                        //buttons: ['copy', 'excel', 'pdf', 'print']//debug
                    });

                    var RRHH_DATOS = $('#table_rrhh_mano').DataTable({
                            "scrollY":        "600px",//tamanho de la tabla
                            "scrollCollapse": true, //collapse de la tabla  
                            "language": {
                            "sProcessing":     "Procesando...",
                            "sLengthMenu":     "Mostrar _MENU_ registros",
                            "sZeroRecords":    "No se encontraron resultados",
                            "sEmptyTable":     "Ningún dato disponible en esta tabla",
                            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix":    "",
                            "sSearch":         "Buscar:",
                            "sUrl":            "",
                            "sInfoThousands":  ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst":    "Primero",
                                "sLast":     "Último",
                                "sNext":     "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        }}
                    );

                    var CLIENTE_DATOS = $('#table_modal_clientes_ingresos').DataTable({
                            "scrollY":        "600px",//tamanho de la tabla
                            "scrollCollapse": true, //collapse de la tabla  
                            "language": {
                            "sProcessing":     "Procesando...",
                            "sLengthMenu":     "Mostrar _MENU_ registros",
                            "sZeroRecords":    "No se encontraron resultados",
                            "sEmptyTable":     "Ningún dato disponible en esta tabla",
                            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix":    "",
                            "sSearch":         "Buscar:",
                            "sUrl":            "",
                            "sInfoThousands":  ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst":    "Primero",
                                "sLast":     "Último",
                                "sNext":     "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        }}
                    );

                    var OT_DATOS_1 = $('#table_ot_plan_m_mano').DataTable({
                            "scrollY":        "600px",//tamanho de la tabla
                            "scrollCollapse": true, //collapse de la tabla  
                            "language": {
                            "sProcessing":     "Procesando...",
                            "sLengthMenu":     "Mostrar _MENU_ registros",
                            "sZeroRecords":    "No se encontraron resultados",
                            "sEmptyTable":     "Ningún dato disponible en esta tabla",
                            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix":    "",
                            "sSearch":         "Buscar:",
                            "sUrl":            "",
                            "sInfoThousands":  ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst":    "Primero",
                                "sLast":     "Último",
                                "sNext":     "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        }}
                    );
                    var OT_DATOS_2 = $('#table_ot_plan_t_mano').DataTable({
                            "scrollY":        "600px",//tamanho de la tabla
                            "scrollCollapse": true, //collapse de la tabla  
                            "language": {
                            "sProcessing":     "Procesando...",
                            "sLengthMenu":     "Mostrar _MENU_ registros",
                            "sZeroRecords":    "No se encontraron resultados",
                            "sEmptyTable":     "Ningún dato disponible en esta tabla",
                            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix":    "",
                            "sSearch":         "Buscar:",
                            "sUrl":            "",
                            "sInfoThousands":  ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst":    "Primero",
                                "sLast":     "Último",
                                "sNext":     "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        }}
                    );
                    var OT_DATOS_3 = $('#table_ot_real_m_mano').DataTable({
                            "scrollY":        "600px",//tamanho de la tabla
                            "scrollCollapse": true, //collapse de la tabla  
                            "language": {
                            "sProcessing":     "Procesando...",
                            "sLengthMenu":     "Mostrar _MENU_ registros",
                            "sZeroRecords":    "No se encontraron resultados",
                            "sEmptyTable":     "Ningún dato disponible en esta tabla",
                            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix":    "",
                            "sSearch":         "Buscar:",
                            "sUrl":            "",
                            "sInfoThousands":  ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst":    "Primero",
                                "sLast":     "Último",
                                "sNext":     "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        }}
                    );
                    var OT_DATOS_4 = $('#table_ot_real_t_mano').DataTable({
                            "scrollY":        "600px",//tamanho de la tabla
                            "scrollCollapse": true, //collapse de la tabla  
                            "language": {
                            "sProcessing":     "Procesando...",
                            "sLengthMenu":     "Mostrar _MENU_ registros",
                            "sZeroRecords":    "No se encontraron resultados",
                            "sEmptyTable":     "Ningún dato disponible en esta tabla",
                            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix":    "",
                            "sSearch":         "Buscar:",
                            "sUrl":            "",
                            "sInfoThousands":  ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst":    "Primero",
                                "sLast":     "Último",
                                "sNext":     "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        }}
                    );
                    var OT_DATOS_5 = $('#table_ot_real_n_mano').DataTable({
                            "scrollY":        "600px",//tamanho de la tabla
                            "scrollCollapse": true, //collapse de la tabla  
                            "language": {
                            "sProcessing":     "Procesando...",
                            "sLengthMenu":     "Mostrar _MENU_ registros",
                            "sZeroRecords":    "No se encontraron resultados",
                            "sEmptyTable":     "Ningún dato disponible en esta tabla",
                            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix":    "",
                            "sSearch":         "Buscar:",
                            "sUrl":            "",
                            "sInfoThousands":  ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst":    "Primero",
                                "sLast":     "Último",
                                "sNext":     "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        }}
                    );

                    //tabla asignacion OT en GASTOS (add y editar)
                    var OT_DATOS_GASTO = $('#table_modal_ot_gastos').DataTable({
                            "scrollY":        "600px",//tamanho de la tabla
                            "scrollCollapse": true, //collapse de la tabla  
                            "language": {
                            "sProcessing":     "Procesando...",
                            "sLengthMenu":     "Mostrar _MENU_ registros",
                            "sZeroRecords":    "No se encontraron resultados",
                            "sEmptyTable":     "Ningún dato disponible en esta tabla",
                            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix":    "",
                            "sSearch":         "Buscar:",
                            "sUrl":            "",
                            "sInfoThousands":  ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst":    "Primero",
                                "sLast":     "Último",
                                "sNext":     "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        }}
                    );


                    //tabla asignacion PROVEEDORES en GASTOS (add y editar)
                    var PROV_DATOS_GASTO = $('#table_modal_pro_gastos').DataTable({
                            "scrollY":        "600px",//tamanho de la tabla
                            "scrollCollapse": true, //collapse de la tabla  
                            "language": {
                            "sProcessing":     "Procesando...",
                            "sLengthMenu":     "Mostrar _MENU_ registros",
                            "sZeroRecords":    "No se encontraron resultados",
                            "sEmptyTable":     "Ningún dato disponible en esta tabla",
                            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix":    "",
                            "sSearch":         "Buscar:",
                            "sUrl":            "",
                            "sInfoThousands":  ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst":    "Primero",
                                "sLast":     "Último",
                                "sNext":     "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        }}
                    );

                    //tabla asignacion OT en INGRESOS (add y editar)
                    var OT_DATOS_INGRESOS = $('#table_modal_ot_ingresos').DataTable({
                            "scrollY":        "600px",//tamanho de la tabla
                            "scrollCollapse": true, //collapse de la tabla  
                            "language": {
                            "sProcessing":     "Procesando...",
                            "sLengthMenu":     "Mostrar _MENU_ registros",
                            "sZeroRecords":    "No se encontraron resultados",
                            "sEmptyTable":     "Ningún dato disponible en esta tabla",
                            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix":    "",
                            "sSearch":         "Buscar:",
                            "sUrl":            "",
                            "sInfoThousands":  ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst":    "Primero",
                                "sLast":     "Último",
                                "sNext":     "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        }}
                    );

                    var CAJA_EMPLES = $('#table_modal_caja').DataTable({
                            "scrollY":        "600px",//tamanho de la tabla
                            "scrollCollapse": true, //collapse de la tabla  
                            "language": {
                            "sProcessing":     "Procesando...",
                            "sLengthMenu":     "Mostrar _MENU_ registros",
                            "sZeroRecords":    "No se encontraron resultados",
                            "sEmptyTable":     "Ningún dato disponible en esta tabla",
                            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix":    "",
                            "sSearch":         "Buscar:",
                            "sUrl":            "",
                            "sInfoThousands":  ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst":    "Primero",
                                "sLast":     "Último",
                                "sNext":     "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        }}
                    );

                    var GASTOS_CAJA = $('#table_caja_gasto').DataTable({
                            "scrollY":        "600px",//tamanho de la tabla
                            "scrollCollapse": true, //collapse de la tabla  
                            "language": {
                            "sProcessing":     "Procesando...",
                            "sLengthMenu":     "Mostrar _MENU_ registros",
                            "sZeroRecords":    "No se encontraron resultados",
                            "sEmptyTable":     "Ningún dato disponible en esta tabla",
                            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
                            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
                            "sInfoPostFix":    "",
                            "sSearch":         "Buscar:",
                            "sUrl":            "",
                            "sInfoThousands":  ",",
                            "sLoadingRecords": "Cargando...",
                            "oPaginate": {
                                "sFirst":    "Primero",
                                "sLast":     "Último",
                                "sNext":     "Siguiente",
                                "sPrevious": "Anterior"
                            },
                            "oAria": {
                                "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                                "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                            }
                        }}
                    );

                    /*JQUERY PARA ASIGNAR EL NOMBRE DEL EMPLEADO EN EL FORM https://stackoverflow.com/questions/36550092/how-to-get-selected-values-from-datatable?rq=1*/
                    $('#table_rrhh_mano tbody').on('click', 'tr', function () {
                        //$(this).toggleClass('selected');
                        var pos = RRHH_DATOS.row(this).index();
                        var row = RRHH_DATOS.row(pos).data();
                        console.log(row);//debug en la consola del navegador
                        //aca tenemos que asignar el valor
                        $('#codigo').val(row[0]);
                        $('#empleado').val(row[1]);
                        $('#jornal').val(row[5]);
                    } );

                    //para la pagina de ingresos, para seleccionar el cliente
                    $('#table_modal_clientes_ingresos tbody').on('click', 'tr', function () {
                        //$(this).toggleClass('selected');
                        var pos = CLIENTE_DATOS.row(this).index();
                        var row = CLIENTE_DATOS.row(pos).data();
                        console.log(row);//debug en la consola del navegador
                        //asignamos el valor
                        $('#id_cliente').val(row[0]);
                        $('#cliente').val(row[1]);
                    } );

                    /*JQUERY PARA ASIGNAR DATOS DE LA OT EN LOS CAMPOS DE CLIENTE Y OBRA PLAN MANANA*/
                    $('#table_ot_plan_m_mano tbody').on( 'click', 'tr', function () {
                        //$(this).toggleClass('selected');
                        var pos = OT_DATOS_1.row(this).index();
                        var row = OT_DATOS_1.row(pos).data();
                        //console.log(row);//debug en la consola del navegador
                        //aca tenemos que asignar el valor
                        $('#ot_plan_m').val(row[0]);
                        $('#cliente_plan_m').val(row[3]);
                        $('#obra_plan_m').val(row[4]);
                        $('#encargado').val(row[6]);
                        $('#trato_cliente').val(row[7]);
                    } );
                    /*JQUERY PARA ASIGNAR DATOS DE LA OT EN LOS CAMPOS DE CLIENTE Y OBRA PLAN TARDE*/
                    $('#table_ot_plan_t_mano tbody').on( 'click', 'tr', function () {
                        //$(this).toggleClass('selected');
                        var pos = OT_DATOS_2.row(this).index();
                        var row = OT_DATOS_2.row(pos).data();
                        //console.log(row);//debug en la consola del navegador
                        //aca tenemos que asignar el valor
                        $('#ot_plan_t').val(row[0]);
                        $('#cliente_plan_t').val(row[3]);
                        $('#obra_plan_t').val(row[4]);
                        $('#encargado2').val(row[6]);
                        $('#trato_cliente2').val(row[7]);
                    } );
                    /*JQUERY PARA ASIGNAR DATOS DE LA OT EN LOS CAMPOS DE CLIENTE Y OBRA REAL MANANA*/
                    $('#table_ot_real_m_mano tbody').on( 'click', 'tr', function () {
                        //$(this).toggleClass('selected');
                        var pos = OT_DATOS_3.row(this).index();
                        var row = OT_DATOS_3.row(pos).data();
                        //console.log(row);//debug en la consola del navegador
                        //aca tenemos que asignar el valor
                        $('#ot_real_m').val(row[0]);
                        $('#cliente_real_m').val(row[3]);
                        $('#obra_real_m').val(row[4]);
                        $('#encargado_real').val(row[6]);
                        $('#trato_cliente_real').val(row[7]);
                    } );
                    /*JQUERY PARA ASIGNAR DATOS DE LA OT EN LOS CAMPOS DE CLIENTE Y OBRA REAL TARDE*/
                    $('#table_ot_real_t_mano tbody').on( 'click', 'tr', function () {
                        //$(this).toggleClass('selected');
                        var pos = OT_DATOS_4.row(this).index();
                        var row = OT_DATOS_4.row(pos).data();
                        //console.log(row);//debug en la consola del navegador
                        //aca tenemos que asignar el valor
                        $('#ot_real_t').val(row[0]);
                        $('#cliente_real_t').val(row[3]);
                        $('#obra_real_t').val(row[4]);
                        $('#encargado_real2').val(row[6]);
                        $('#trato_cliente_real2').val(row[7]);
                    } );
                    $('#table_ot_real_n_mano tbody').on( 'click', 'tr', function () {
                        //$(this).toggleClass('selected');
                        var pos = OT_DATOS_5.row(this).index();
                        var row = OT_DATOS_5.row(pos).data();
                        //console.log(row);//debug en la consola del navegador
                        //aca tenemos que asignar el valor
                        $('#ot_real_n').val(row[0]);
                        $('#cliente_real_n').val(row[3]);
                        $('#obra_real_n').val(row[4]);
                    } );
                    //modal de asignacion de ot en GASTOS
                    $('#table_modal_ot_gastos tbody').on( 'click', 'tr', function () {
                        //$(this).toggleClass('selected');
                        var pos = OT_DATOS_GASTO.row(this).index();
                        var row = OT_DATOS_GASTO.row(pos).data();
                        //console.log(row);//debug en la consola del navegador
                        //asignamos el valor
                        $('#nro_ot').val(row[0]);
                    } );

                    $('#table_caja_gasto tbody').on( 'click', 'tr', function () {
                        //$(this).toggleClass('selected');
                        var pos = GASTOS_CAJA.row(this).index();
                        var row = GASTOS_CAJA.row(pos).data();
                        //console.log(row);//debug en la consola del navegador
                        //asignamos el valor
                        $('#id_caja').val(row[0]);
                        $('#caja').val(row[1]);
                    } );

                    $('#table_modal_caja tbody').on( 'click', 'tr', function () {
                        //$(this).toggleClass('selected');
                        var pos = CAJA_EMPLES.row(this).index();
                        var row = CAJA_EMPLES.row(pos).data();
                        //console.log(row);//debug en la consola del navegador
                        //asignamos el valor
                        $('#codigo').val(row[0]);
                        $('#responsable').val(row[1]);
                    } );

                    $('#table_modal_ot_ingresos tbody').on( 'click', 'tr', function () {
                        //$(this).toggleClass('selected');
                        var pos = OT_DATOS_INGRESOS.row(this).index();
                        var row = OT_DATOS_INGRESOS.row(pos).data();
                        //console.log(row);//debug en la consola del navegador
                        //asignamos el valor
                        $('#nro_ot').val(row[0]);//asignamos el nro de OT
                        $('#obra').val(row[11]);//asignamos la OBRA de la OT
                    } );

                    $('#table_modal_pro_gastos tbody').on( 'click', 'tr', function () {
                        //$(this).toggleClass('selected');
                        var pos = PROV_DATOS_GASTO.row(this).index();
                        var row = PROV_DATOS_GASTO.row(pos).data();
                        //console.log(row);//debug en la consola del navegador
                        //asignamos el valor
                        $('#proveedor').val(row[1].replace(/&amp;/g, '&'));//unescape para que detecte el &
                        $('#id_proveedor').val(row[0]);///capturamos tambien el id proveedor para insertar en el gasto, el campo esta oculto
                    } );

                });
            </script>

        </div>
    </div>

</body>


</html> 